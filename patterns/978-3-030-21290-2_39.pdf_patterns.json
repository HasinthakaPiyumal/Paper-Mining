[
  {
    "Pattern Name": "Loan Approval Solution Pattern",
    "Problem": "Organizations struggle to effectively apply machine learning to complex business decisions like loan approval. This involves challenges in translating business needs into well-defined ML problems, selecting appropriate algorithms, configuring them, evaluating their performance, and managing quality requirements and data preparation.",
    "Context": "A business process where a 'Loan expert' needs to make 'Decision on Loan Applications' and desires an 'ML-generated recommendation on a new case given past decisions'. The process requires a structured approach to integrate ML effectively.",
    "Solution": "The pattern provides a structured ML design that:\n1.  **Translates Business to ML:** Links business actors and decisions to specific ML 'Question Goals' (e.g., 'What would be the approval decision?') which are answered by 'Insight' elements (e.g., a 'Predictive model').\n2.  **Guides ML Algorithm Selection:** Defines 'Analytics Goals' (e.g., 'Prediction' leading to 'Classification') and links them to alternative 'Algorithms' (e.g., kNearest Neighbor, Naive Bayes, Support Vector Machines).\n3.  **Applies Contextual Guidance:** Incorporates 'User Contexts' (e.g., 'Users desire simplicity'), 'Data Contexts' (e.g., 'Features are independent'), and 'Model Contexts' (e.g., 'Decrease parameter C when dataset is noisy') to inform algorithm applicability and configuration.\n4.  **Manages Evaluation & Non-Functional Requirements (NFRs):** Specifies 'Indicators' (e.g., Accuracy, Precision) for model evaluation, with 'Data Contexts' guiding metric choice (e.g., 'Precision should be used...when Users desire a low rate of false-positives'). It also considers 'Softgoals' (NFRs, e.g., 'Tolerance to missing values') and how algorithms contribute to or detract from them.\n5.  **Directs Data Preparation:** Identifies relevant 'Entities' (data attributes, e.g., Age, Income, Loan amount) and 'Operators' for 'Data Preparation Tasks' (e.g., 'Perform data normalization on numerical features when using kMeans algorithm').",
    "Result": "Provides a reusable, context-aware ML design that streamlines the development of loan approval systems. It ensures appropriate algorithm selection, configuration, data preparation, and evaluation, aligning with business needs and quality requirements, thereby reducing development complexity and time.",
    "Related Patterns": [
      "Fraud Detection Solution Pattern",
      "Task Assignment Solution Pattern"
    ],
    "Uses": "Loan application approval systems, credit scoring, risk assessment in financial services, any business process requiring ML-driven binary classification decisions.",
    "Category": [
      "Classical AI",
      "MLOps",
      "Knowledge & Reasoning"
    ]
  },
  {
    "Pattern Name": "Fraud Detection Solution Pattern",
    "Problem": "Detecting fraudulent activities (e.g., in insurance claims) is challenging due to the inherent class imbalance in fraud datasets and the need to adapt ML approaches based on the type and availability of training data (e.g., presence of both fraud and non-fraud samples vs. only non-fraud samples).",
    "Context": "Business processes involving the detection of anomalies or unusual patterns, such as identifying fraudulent insurance claims, where the characteristics of available training data significantly influence the choice and effectiveness of the ML approach.",
    "Solution": "This pattern guides the design of fraud detection systems by:\n1.  **Focusing on Anomaly Detection:** Employs 'Anomaly Detection' as the primary 'Analytics Goal' for identifying unusual claims.\n2.  **Adapting to Data Availability:** Provides guidance on selecting between supervised and semi-supervised anomaly detection approaches based on whether both fraud and non-fraud samples are available, or if only non-fraud examples are present.\n3.  **Addressing NFRs:** Incorporates 'Softgoals' such as 'Tolerance to redundant attributes' and recommends specific ML techniques (e.g., neural networks) that are known to address these quality requirements.\n4.  **Structured ML Design:** Adheres to the general 'solution pattern' framework, detailing relevant algorithms, metrics, contextual guidance (User, Data, Model Contexts), and data preparation steps specifically tailored for fraud detection scenarios.",
    "Result": "Enables efficient and effective development of fraud detection systems by providing a structured design that adapts the ML approach based on data characteristics and prioritizes quality requirements. This reduces exploration and experimentation efforts and improves the reliability of fraud detection.",
    "Related Patterns": [
      "Loan Approval Solution Pattern",
      "Task Assignment Solution Pattern"
    ],
    "Uses": "Fraud detection in banking, insurance, and cybersecurity; anomaly detection in network intrusion, manufacturing quality control, and system health monitoring.",
    "Category": [
      "Classical AI",
      "MLOps",
      "Knowledge & Reasoning"
    ]
  },
  {
    "Pattern Name": "Task Assignment Solution Pattern",
    "Problem": "Developing ML solutions for task assignment involves challenges related to effective data preparation, ensuring efficient learning, and managing computational resources, especially when dealing with high-dimensional data or the need for fast model execution.",
    "Context": "Business processes that require automated or ML-assisted task allocation, where factors like data efficiency, learning speed, and algorithm complexity are critical considerations for successful deployment and operation.",
    "Solution": "The pattern provides a structured design for ML-driven task assignment by:\n1.  **Emphasizing Advanced Data Preparation:** Explicitly includes 'Data Preparation Tasks' like 'Dimensionality Reduction' to optimize complex datasets for ML algorithms, improving efficiency and performance.\n2.  **Facilitating Fine-Grained Algorithm Decomposition:** Illustrates how complex algorithms (e.g., kNearest Neighbor) can be broken down into 'finer-grain tasks', offering more detailed guidance for their implementation and optimization.\n3.  **Prioritizing Performance:** Integrates 'Softgoals' such as 'Speed of learning', linking algorithm choices and data preparation steps directly to their impact on these critical performance requirements.\n4.  **Structured ML Design:** Adheres to the overall 'solution pattern' framework, integrating business goals, ML algorithms, contextual factors, and quality attributes to guide the comprehensive design of task assignment ML systems.",
    "Result": "Facilitates the creation of robust and performant ML systems for task assignment by providing clear guidance on data preparation, algorithm breakdown, and ensuring that design choices are aligned with critical performance and quality objectives. This leads to more efficient and effective task allocation solutions.",
    "Related Patterns": [
      "Loan Approval Solution Pattern",
      "Fraud Detection Solution Pattern"
    ],
    "Uses": "Workforce management, resource allocation, intelligent routing systems, project management task distribution, scheduling systems.",
    "Category": [
      "Classical AI",
      "MLOps",
      "Knowledge & Reasoning"
    ]
  }
]